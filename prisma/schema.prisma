// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

// model Session {
//   id           String   @id @default(auto()) @map("_id") @db.ObjectId
//   sessionToken String   @unique
//   userId       String   @map("user_id") @db.ObjectId 
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@map(name: "sessions")
// }

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  accounts       Account[]
  // Session        Session[]

  @@map(name: "users")
}


model Category {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  companions    Companion[]
}

model Companion {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  userName      String
  src           String
  name          String @db.String
  description   String
  instructions  String @db.String
  seed          String @db.String

  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    String @db.ObjectId


  @@index([categoryId])
  @@fulltext([name])
}


